/**
 * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).
 * @version v1.2.0
 * @link https://github.com/ten1seven/what-input
 * @license MIT
 */
!function(e,t){"function"==typeof define&&define.amd?define([],function(){return t()}):"object"==typeof exports?module.exports=t():e.whatInput=t()}(this,function(){"use strict";function e(e){var i=t(e),u=n(e),d=w[e.type];"pointer"===d&&(d=o(e)),p!==d&&(!a.hasAttribute("data-whatinput-formtyping")&&p&&"keyboard"===d&&"tab"!==v[i]&&c.indexOf(u.nodeName.toLowerCase())>=0||(p=d,a.setAttribute("data-whatinput",p),-1===m.indexOf(p)&&m.push(p))),"keyboard"===d&&r(i)}function t(e){return e.keyCode?e.keyCode:e.which}function n(e){return e.target||e.srcElement}function o(e){return"number"==typeof e.pointerType?h[e.pointerType]:"pen"===e.pointerType?"touch":e.pointerType}function r(e){-1===s.indexOf(v[e])&&v[e]&&s.push(v[e])}function i(e){var n=t(e),o=s.indexOf(v[n]);-1!==o&&s.splice(o,1)}function u(){window.PointerEvent?(a.addEventListener("pointerdown",e),a.addEventListener("pointermove",e)):window.MSPointerEvent?(a.addEventListener("MSPointerDown",e),a.addEventListener("MSPointerMove",e)):(a.addEventListener("mousedown",e),a.addEventListener("mousemove",e),"ontouchstart"in window&&a.addEventListener("touchstart",e)),a.addEventListener(f,e),a.addEventListener("keydown",e),document.addEventListener("keyup",i)}function d(){return f="onwheel"in document.createElement("div")?"wheel":void 0!==document.onmousewheel?"mousewheel":"DOMMouseScroll"}var s=[],a=document.body,p=null,c=["input","select","textarea"],f=d(),w={keydown:"keyboard",mousedown:"mouse",mousemove:"mouse",MSPointerDown:"pointer",MSPointerMove:"pointer",pointerdown:"pointer",pointermove:"pointer",touchstart:"touch"};w[d()]="mouse";var m=[],v={9:"tab",13:"enter",16:"shift",27:"esc",32:"space",37:"left",38:"up",39:"right",40:"down"},h={2:"touch",3:"touch",4:"mouse"};return"addEventListener"in window&&Array.prototype.indexOf&&u(),{ask:function(){return p},keys:function(){return s},types:function(){return m},set:e}});