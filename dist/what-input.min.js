/**
 * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).
 * @version v5.0.0
 * @link https://github.com/ten1seven/what-input
 * @license MIT
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("whatInput",[],t):"object"==typeof exports?exports.whatInput=t():e.whatInput=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var r=n[o]={exports:{},id:o,loaded:!1};return e[o].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t){"use strict";e.exports=function(){var e=document.documentElement,t=null,n="initial",o=n,r=["input","select","textarea"],i=[16,17,18,91,93],u=[9],a={keydown:"keyboard",mousedown:"mouse",mousemove:"mouse",MSPointerDown:"pointer",MSPointerMove:"pointer",pointerdown:"pointer",pointermove:"pointer",touchstart:"touch"},d=!1,s=!1,c={x:null,y:null},p={2:"touch",3:"touch",4:"mouse"},f=function(){window.PointerEvent?(e.addEventListener("pointerdown",m),e.addEventListener("pointermove",v)):window.MSPointerEvent?(e.addEventListener("MSPointerDown",m),e.addEventListener("MSPointerMove",v)):(e.addEventListener("mousedown",m),e.addEventListener("mousemove",v),"ontouchstart"in window&&(e.addEventListener("touchstart",y),e.addEventListener("touchend",y))),e.addEventListener(E(),v),e.addEventListener("keydown",m),document.body.addEventListener("focusin",w),document.body.addEventListener("focusout",h)},m=function(e){if(!d){var t=e.which,s=a[e.type];if("pointer"===s&&(s=x(e)),(n!==s||o!==s)&&("touch"===s||"mouse"===s||"keyboard"===s&&-1===i.indexOf(t))){n=s;var c=document.activeElement;(c&&c.nodeName&&-1===r.indexOf(c.nodeName.toLowerCase())||-1!==u.indexOf(t))&&(o=s),l()}}},l=function(){e.setAttribute("data-whatinput",n),e.setAttribute("data-whatintent",o)},v=function(t){if(c.x!==t.screenX||c.y!==t.screenY?(s=!1,c.x=t.screenX,c.y=t.screenY):s=!0,!d&&!s){var n=a[t.type];"pointer"===n&&(n=x(t)),o!==n&&(o=n,e.setAttribute("data-whatintent",o))}},w=function(n){t=n.target.nodeName.toLowerCase();var o="input"===t?t+"[type="+(n.target.getAttribute("type")||"text")+"]":t;e.setAttribute("data-whatelement",o),n.target.classList.length&&e.setAttribute("data-whatclasses",n.target.classList.toString().replace(" ",","))},h=function(){t=null,e.removeAttribute("data-whatelement"),e.removeAttribute("data-whatclasses")},y=function(e){"touchstart"===e.type?(d=!1,m(e)):d=!0},x=function(e){return"number"==typeof e.pointerType?p[e.pointerType]:"pen"===e.pointerType?"touch":e.pointerType},E=function(){return"onwheel"in document.createElement("div")?"wheel":void 0!==document.onmousewheel?"mousewheel":"DOMMouseScroll"};return"addEventListener"in window&&Array.prototype.indexOf&&function(){a[E()]="mouse",f(),l()}(),{ask:function(e){return"intent"===e?o:n},element:function(){return t},ignoreKeys:function(e){i=e}}}()}])});